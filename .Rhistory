source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
strsplit(d$ingredients, "[,]")
class(d$ingredients)
d$ingredients[1]
length(unique(d$ingredients))
dim(d)
table(d$ingredients)
list(c("t", "r"))
list(d$ingredients)
dim(list(d$ingredients))
length(list(d$ingredients))
list(d$ingredients)[1]
list(d$ingredients)[2]
list(d$ingredients)[[1]]
list(d$ingredients)[[1]][1]
list(d$ingredients)[[1]][1][1]
list(d$ingredients)[[1]][[1]][2]
?unlist
d$ingredients[1]
unlist(d$ingredients[1])
unlist(d$ingredients[1:5])
length(unlist(d$ingredients))
class(unlist(d$ingredients))
table(unlist(d$ingredients))
head(table(unlist(d$ingredients)))
?table
?sort
names(table(unlist(d$ingredients)))
(table(unlist(d$ingredients)))[order()]
tabulated <- (table(unlist(d$ingredients)))
head(tabulated)
head(tabulated)[1]
class((tabulated)[1])
order((table(unlist(d$ingredients))))
head(order((table(unlist(d$ingredients)))))
tabulated <- (table(unlist(d$ingredients)))
tabulated[tabulated > 3800]
tabulated[tabulated < 0]
tabulated[tabulated < 0]
tabulated[tabulated < 100]
tabulated[tabulated < 50]
tabulated[tabulated < 20]
tabulated[tabulated < 10]
tabulated[tabulated < 5]
tabulated[tabulated == 1]
universe.of.ingredients <- unique(unlist(d$ingredients))
order(universe.of.ingredients)
sort(universe.of.ingredients)
(universe.of.ingredients)[1]
head(sort(universe.of.ingredients))
head(universe.of.ingredients)
head(sort(unique(unlist(d$ingredients))))
length(universe.of.ingredients)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/504/data")
d <- read.table("edges.txt")
graph_from_data_frame(d)
library(igraph)
graph_from_data_frame(d)
head(d)
?as_adjacency_matrix
d$test <- 5
graph_from_data_frame(d)
as.matrix(as_adjacency_matrix(graph_from_data_frame(d)))
d <- read.table("karate club.txt")
d <- read.table("edges.txt")
graph_from_data_frame(d)
as.matrix(as_adjacency_matrix(graph_from_data_frame(d)))
dim(as.matrix(as_adjacency_matrix(graph_from_data_frame(d))))
(as.matrix(as_adjacency_matrix(graph_from_data_frame(d))))[1,1]
(as.matrix(as_adjacency_matrix(graph_from_data_frame(d))))[1,5]
max((as.matrix(as_adjacency_matrix(graph_from_data_frame(d)))))
min((as.matrix(as_adjacency_matrix(graph_from_data_frame(d)))))
(as.matrix(as_adjacency_matrix(graph_from_data_frame(d))))[1]
(as.matrix(as_adjacency_matrix(graph_from_data_frame(d))))[1,]
max((as.matrix(as_adjacency_matrix(graph_from_data_frame(d)))))
max((as.matrix(as_adjacency_matrix(graph_from_data_frame(d)), attr = "test")))
head(d)
d$test<- 5
max((as.matrix(as_adjacency_matrix(graph_from_data_frame(d)), attr = "test")))
max((as.matrix(as_adjacency_matrix(graph_from_data_frame(d)), attr = "test")))
graph_from_data_frame(d)
graph_from_data_frame(head(d)))
graph_from_data_frame(head(d))
as_adjacency_matrix(graph_from_data_frame(head(d)))
as_adjacency_matrix(graph_from_data_frame(head(d)), attr = "test")
as.matrix(as_adjacency_matrix(graph_from_data_frame(head(d)), attr = "test"))
tr <- rbind(head(d), c(1,2,3))
as.matrix(as_adjacency_matrix(graph_from_data_frame(head(d)), attr = "test"))
as.matrix(as_adjacency_matrix(graph_from_data_frame(tr), attr = "test"))
test.recipes <- d$ingredients[1:12]
test.recipes
test.recipes <- d$ingredients[1:12,]
test.recipes
test.recipes <- d$ingredients[2]
d <- fromJSON("C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/train.json")
test.recipes <- d$ingredients[1:12]
test.recipes
length(test.recipes)
?lapply
lapply(test.recipes, length)
lapply(test.recipes, combn)
?combn
?lapply
lapply(test.recipes, combn, 2)
lapply(test.recipes, simplify = T, combn, 2)
unlist(lapply(test.recipes, simplify = T, combn, 2))
?unlist
unlist(lapply(test.recipes, simplify = T, combn, 2), recursive = F)
unlist(lapply(test.recipes, simplify = T, combn, 2), recursive = FALSE)
lapply(test.recipes, simplify = T, combn, 2)[, recursive = FALSE)[1]
lapply(test.recipes, simplify = T, combn, 2)[1]
lapply(test.recipes, simplify = T, combn, 2)[2]
lenght(lapply(test.recipes, simplify = T, combn, 2))
length(lapply(test.recipes, simplify = T, combn, 2))
cbind(lapply(test.recipes, simplify = T, combn, 2))
?cbind
lapply(test.recipes, simplify = T, combn, 2)[2]
cbind(lapply(test.recipes, simplify = T, combn, 2)[1:2])
cbind(lapply(test.recipes, simplify = T, combn, 2)[[1:2]])
?append
lapply(test.recipes, simplify = T, combn, 2)[2]
unlist(lapply(test.recipes, simplify = T, combn, 2))
unlist(lapply(test.recipes, simplify = T, combn, 2) , recursive = FALSE)
lapply(test.recipes, simplify = T, combn, 2)[2]
lapply(test.recipes, simplify = T, combn, 2)
?choose
d$pairs <- lapply(d$ingredients, simplify = T, combn, 2)
d$pairs <- lapply(d$ingredients, simplify = T, combn, 1)
d$pairs <- lapply(d$ingredients, simplify = T, combn, 2)
d[lapply(d$ingredients, simplify = T, length) ==1 , ]
lapply(d$ingredients, simplify = T, length)
lapply(d$ingredients, length)
d[lapply(d$ingredients, length) ==1 , ]
d <- d[lapply(d$ingredients, length) >= 2 , ] # I only care about recipes with at least two ingredients
d[lapply(d$ingredients, length) ==1 , ]
d$pairs <- lapply(d$ingredients, simplify = T, combn, 2)
head(d)
d$pairs[1]
d$pairs[[1]]
class(d$pairs[[1]])
class(d$pairs[1])
relations.w.weight <- t(  rbind(d$pairs[[1]] , 1/dim(d$pairs[[1]])[2])  )
class(d$pairs[[1]])
relations.w.weight
1/36
?data.frame
data.frame(relations.w.weight)
names(data.frame(relations.w.weight)) <- c("a", "b", "c")
names(data.frame(relations.w.weight))
names(data.frame(relations.w.weight)) <- c("a", "b", "c")
data.frame(relations.w.weight) -> ht
names(ht) <-  c("a", "b", "c")
names(ht)
ht
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
relations.df
relations.df$Weight
class(relations.df$Weight)
?data.frame
relations.df <- data.frame(relations.w.weight, stringsAsFactors = FALSE)
stringsAsFactors = FALSE
class(relations.df$Weight)
relations.df$Weight
relations.df
relations.df$X3
as.numeric(relations.df$X3)
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
d <- read.table("edges.txt")
adj_d <- as.matrix(as_adjacency_matrix(graph_from_data_frame(d)))
adj_d
adj_d[1:3, 1:3]
g <- graph.adjacency(as.matrix(d),mode="undirected",weighted=NULL,diag=FALSE)
g <- graph.adjacency(as.matrix(relations.df),mode="undirected",weighted=NULL,diag=FALSE)
relations.df
g <- graph.adjacency(as.matrix(relations.df),mode="undirected",weighted=NULL,diag=FALSE)
g <- graph.adjacency(as.matrix(adj_matrix),mode="undirected",weighted=NULL,diag=FALSE)
adj_matrix <- as.matrix(as_adjacency_matrix(graph_from_data_frame(relations.df), attr = "Weight"))
g <- graph.adjacency(as.matrix(adj_matrix),mode="undirected",weighted=NULL,diag=FALSE)
plot.igraph(g) #, vertex.color = s+ 18)
adj_matrix
?graph.adjacency
g <- graph.adjacency(as.matrix(adj_matrix),mode="undirected",weighted="Weight",diag=FALSE)
plot.igraph(g) #, vertex.color = s+ 18)
?plot.igraph
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
print(table(s))
dim(adj_matrix)
dim(B)
length(s)
s
dominant_u
eigen(B)
print(s[s==-1])
print(B[s==-1])
B
print(B[s==-1,])
print(dominant_u[s==-1,])
print(dominant_u[s==1,])
Find.S <- function(arbitrary.adj.matrix) {
K <- rowSums(arbitrary.adj.matrix)
kk_m <- (K%*%t(K))/sum(K)
B <- arbitrary.adj.matrix-kk_m
dominant_u <-  power.iter(B, rep(1,nrow(B)), 100)
s <- dominant_u/abs(dominant_u)
return(s)
}
Find.S(arbitrary.adj.matrix = adj_matrix)
B
B[,1]
Find.S(arbitrary.adj.matrix = adj_matrix)
s
B[s==1s==1]
B[s==1, s==1]
s==1
names(B)
K
names(K)
class(K)
?merge
s
merge(K,s)
merge(K,s) -> result
head(result)
cbind(names(K), K)
Storing.results <- data.frame(names(K), K)
head(Storing.results)
merge(Storing.results,s) -> result
result
rbind(Find.S(B[s==1,s==1]), Find.S(B[s==-1,s==-1]))
Find.S(B[s==-1,s==-1]
)
Find.S(B[s==1,s==1])
s
s[is.nan(s)] <- 1 # temp fix
s
rbind(Find.S(B[s==1,s==1]), Find.S(B[s==-1,s==-1]))
unique(s)
B
B[1:3,1:3]
eigen(B[1:3,1:3])
eigen(B[1:5,1:5])
Find.S <- function(elements.to.subset = 1:dim(B)[1]) {
new.B <- B[elements.to.subset, elements.to.subset]
dominant_u <-  power.iter(B, rep(1,nrow(B)), 100)
s <- dominant_u/abs(dominant_u)
return(s)
}
Find.S
Find.S()
s
Find.S(elements.to.subset = s == 1)
Find.S(elements.to.subset = s == 1)
Find.S <- function(elements.to.subset = 1:dim(B)[1]) {
new.B <- B[elements.to.subset, elements.to.subset]
dominant_u <-  power.iter(new.B, rep(1,nrow(B)), 100)
s <- dominant_u/abs(dominant_u)
s[is.nan(s)] <- 1 # temp fix
return(s)
}
Find.S(elements.to.subset = s == 1)
Find.S <- function(elements.to.subset = 1:dim(B)[1]) {
new.B <- B[elements.to.subset, elements.to.subset]
dominant_u <-  power.iter(new.B, rep(1,nrow(new.B)), 100)
s <- dominant_u/abs(dominant_u)
s[is.nan(s)] <- 1 # temp fix
return(s)
}
Find.S(elements.to.subset = s == 1)
s1 <- Find.S()
s2 <- rbind(Find.S(s1==1), Find.S(s1 == -1))
length(s2)
cbind(s1, s2)
cbind(s1, s2)[s1 == 1, s2 ==1]
cbind(s1, s2)[s1 == 1 & s2 ==1 , ]
cbind(s1, s2)[s1 == 1 & s2 ==-1 , ]
cbind(s1, s2)[s1 == -1 & s2 ==-1 , ]
cbind(s1, s2)[s1 == -1 & s2 ==1 , ]
cbind(s1, s2)[s1 == 1 & s2 ==1 , ]
cbind(s1, s2)[s1 == -1 & s2 ==1 , ]
cbind(s1, s2)[s1 == -1 & s2 ==-1 , ]
cbind(s1, s2)[s1 == -1 ]
cbind(s1, s2)[s1 == -1 ,]
s3 <- rbind(Find.S(s1==1 & s2==1), Find.S(s1 == -1 & s2==1), Find.S(s1==1 & s2==-1), Find.S(s1 == -1 & s2==-1))
s3 <- rbind(Find.S(s1==1 & s2==1), Find.S(s1 == -1 & s2==1), Find.S(s1==1 & s2==-1), Find.S(s1 == -1 & s2==-1))
Find.S(s1==1 & s2==1)
Find.S(s1 == -1 & s2==1)
Find.S(s1==1 & s2==-1),
Find.S(s1==1 & s2==-1)
Find.S(s1 == -1 & s2==-1)
cbind(s1, s2)[s1 == -1 & s2==1,]
data.frame(s1, s2)[s1 == -1 & s2==1,]
cbind(s1, s2)[s1 == -1 & s2==1,]
names(cbind(s1, s2)[s1 == -1 & s2==1,])
names(cbind(s1, s2)[s1 == -1 & s2==-1,])
(cbind(s1, s2)[s1 == -1 & s2==-1,])
s3 <- rbind(Find.S(s1==1 & s2==1), Find.S(s1==1 & s2==-1), Find.S(s1 == -1 & s2==-1))
s3
cbind(s1, s2, s3)
merge(s1, s2, s3)
merge(s1, s2, s3, by = c(intersect(names(s1), names(s2, names(s3)))))
names(s1)
s1
merge(s1, s2, s3, by = "row.names")
merge(s1, s3 by = "row.names")
merge(s1, s3 , by = "row.names")
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
?order
?data.frame
cbind(s1,s2,s3)
cbind(s1,s2,s3)[s1==1, s2 ==1, s3 == 1]
cbind(s1,s2,s3)[s1==1 & s2 ==1 & s3 == 1 , ]
cbind(s1,s2,s3)[s1==1 & s2 ==1 & s3 == -1 , ]
cbind(s1,s2,s3)[s1==1 & s2 == -1 & s3 == 1 , ]
cbind(s1,s2,s3)[s1==1 & s2 == -1 & s3 == -1 , ]
cbind(s1,s2,s3)[s1== -1 & s2 == -1 & s3 == -1 , ]
cbind(s1,s2,s3)[s1== -1 & s2 == 1 & s3 == -1 , ]
cbind(s1,s2,s3)[s1== 1 & s2 == 1 & s3 == -1 , ]
cbind(s1,s2,s3)[s1== 1 & s2 == -1 & s3 == -1 , ]
cbind(s1,s2,s3)[s1== 1 & s2 == -1 & s3 == 1 , ]
cbind(s1,s2,s3)[s1== -1 & s2 == -1 & s3 == 1 , ]
Find.S(s1== -1 & s2 == -1 & s3 == 1)
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
2^s1
cbind(s1,s2,s3)[s1== 1 & s2 == -1 & s3 == -1 , ]
cbind(s1,s2,s3)[s1== -1 & s2 == -1 & s3 == 1 , ]
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
cbind(s1,s2,s3)[s1== -1 & s2 == -1 & s3 == 1 , ]
cbind(s1,s2,s3)[s1== 1 & s2 == -1 & s3 == 1 , ]
table(s1)
table(s2)
table(s3)
table(s4)
cbind(s1,s2,s3, s4)[s1== 1 & s2 == 1 & s3 == 1 & s4 =1, ]
cbind(s1,s2,s3, s4)[s1== 1 & s2 == 1 & s3 == 1 & s4 == 1, ]
cbind(s1,s2,s3, s4)[s1== 1 & s2 == 1 & s3 == 1 & s4 == -1, ]
cbind(s1,s2,s3, s4)[s1== 1 & s2 == -1 & s3 == 1 & s4 == 1, ]
cbind(s1,s2,s3, s4)[s1== 1 & s2 == 1 & s3 == -1 & s4 == 1, ]
cbind(s1,s2,s3, s4)[s1== 1 & s2 == 1 & s3 == -1 & s4 == -1, ]
cbind(s1,s2,s3, s4)[s1== 1 & s2 == 1 & s3 == -1 & s4 == 1, ]
cbind(s1,s2,s3, s4)[s1== 1 , ]
s1
cbind(s1,s2,s3, s4)[s1== 1 & s2 == 1 & s3 == -1 & s4 == 1, ]
cbind(s1,s2,s3, s4)[s1== 1 & s2 == 1 & s3 == -1 & s4 == -1, ]
cbind(s1,s2,s3, s4)[s1== 1 & s2 == 1 & s3 == 1 & s4 == 1, ]
cbind(s1,s2,s3, s4)[s1== -1 & s2 == 1 & s3 == 1 & s4 == 1, ]
cbind(s1,s2,s3, s4)[s1== 1 & s2 == -1 & s3 == 1 & s4 == 1, ]
cbind(s1,s2,s3, s4)[s1== -1 & s2 == -1 & s3 == 1 & s4 == 1, ]
cbind(s1,s2,s3, s4)[s1== 1 & s2 == -1 & s3 == -1 & s4 == 1, ]
adj_matrix
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
cbind(s1,s2,s3, s4)[s1== 1 & s2 == -1 & s3 == 1 & s4 == 1, ]
cbind(s1,s2,s3, s4)[s1== -1 & s2 == 1 & s3 == 1 & s4 == 1, ]
table(s1)
table(s2)
table(s3)
table(s4)
cbind(s1,s2,s3, s4)[s1== -1 & s2 == -1 & s3 == 1 & s4 == 1, ]
cbind(s1,s2,s3, s4)[s1== -1 & s2 == -1 & s3 == 1 & s4 == -1, ]
cbind(s1,s2,s3, s4)[s1== -1 & s2 == -1 & s3 == -1 & s4 == -1, ]
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
data.frame(s1,s2)
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
table(results$group_id)
results$group_id
names(results)
results$group_id <- cat(s1,s2,s3,s4)
names(results)
results$t <- "cat"
names(results)
results$group_id <- cat(s1,s2,s3,s4)
cat(s1,s2,s3,s4)
names(results)
fr <- cat(s1,s2,s3,s4)
fr
?cat
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
table(results$group_id)
results[results$group_id == 11-1-1]
results[results$group_id == "11-1-1"]
results[results$group_id == "1 1 -1 -1"]
results[results$group_id == "1 1 -1 -1",]
results[results$group_id == "-1 1 1 -1",]
results[results$group_id == "-1 1 -1 -1",]
results[results$group_id == "1 1 -1 -1",]
results[results$group_id == "1 1 -1 1",]
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
table(results$group_id)
results[results$group_id == "1 1 1 1",]
results[results$group_id == "1 -1 1 1",]
results[results$group_id == "1 -1 1 -1",]
results[results$group_id == "1 -1 -1 1",]
results[results$group_id == "1 -1 -1 -1",]
results[results$group_id == "-1 1 1 1",]
results[results$s1 = 1,]
results[results$s1 == 1,]
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
table(results$group_id)
table(s1)
results[results$group_id == "-1 -1 -1 -1",]
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
table(s1)
table(results$group_id)
results[results$group_id == "-1 -1 -1 -1",]
results[results$group_id == "-1 -1 -1 1",]
source('C:/Users/Diag Davenport/Desktop/Edumacation, because degrees mean more than intelligence/Georgetown/Food-Network/Process data.R', echo=TRUE)
table(results$group_id)
results[results$group_id == "-1 1 1 1",]
adj_matrix
adj_matrix["cheddar cheese"]
adj_matrix["seasoning"]
adj_matrix["cheddar cheese",]
